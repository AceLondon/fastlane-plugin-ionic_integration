require 'fastlane/plugin/cordova_screenshots/constants'

module Fastlane
  module Helper
    class CordovaScreenshotsHelper
      HELPER_PATH = File.expand_path(File.dirname(__FILE__))

      def self.copy_all_files(src_folder, project_folder)
        if src_folder && Dir.exist?(src_folder)
          dest_folder = project_folder.to_s
          UI.message "Copying all files from '#{src_folder}' to '#{dest_folder}'"
          Dir.exist?(dest_folder) || FileUtils.mkdir_p(dest_folder)
          FileUtils.cp_r(src_folder + "/.", dest_folder)
        elsif
          UI.user_error! "Copying files: '#{src_folder}' does not exist."
        end
      end

      def self.copy_ios_sample_tests(scheme_name)
        ios_resources_path = File.expand_path("#{HELPER_PATH}/../resources/ios")
        source_folder = "#{ios_resources_path}/#{CordovaScreenshots::IONIC_DEFAULT_UNIT_TEST_NAME}"
        dest_folder = "#{CordovaScreenshots::IONIC_IOS_CONFIG_PATH}/#{scheme_name}"
        copy_all_files(source_folder, dest_folder)
      end

      #
      # Find any existing Xcode Workspace generated by Cordova/Ionic
      #
      def self.find_default_ios_xcode_workspace
        Dir["#{CordovaScreenshots::IONIC_IOS_BUILD_PATH}/*.xcodeproj"].last || nil
      end

      def self.copy_android_sample_test()
        android_resources_path = File.expand_path("#{HELPER_PATH}/../resources/android")
        Dir.exist?(CordovaScreenshots::IONIC_ANDROID_CONFIG_PATH) || FileUtils.mkdir_p(CordovaScreenshots::IONIC_ANDROID_CONFIG_PATH)
        FileUtils.cp("#{android_resources_path}/ScreengrabTest.java", "#{CordovaScreenshots::IONIC_ANDROID_CONFIG_PATH}")
      end

      def self.copy_android_test_file(package_name_path, package_name)
        test_path = "platforms/android/app/src/androidTest/java/#{package_name_path}"
        Dir.exist?(test_path) || FileUtils.mkdir_p(test_path)
        FileUtils.cp("#{CordovaScreenshots::IONIC_ANDROID_CONFIG_PATH}/ScreengrabTest.java", test_path)
        # TODO replace package_name in file before copying
      end

      def self.copy_android_build_extras_gradle
        android_resources_path = File.expand_path("#{HELPER_PATH}/../resources/android")
        FileUtils.cp("#{android_resources_path}/build-extras.gradle", "platforms/android/app")
      end

      def self.copy_android_manifest(package_name_path)
        android_resources_path = File.expand_path("#{HELPER_PATH}/../resources/android")
        dest_path = "platforms/android/app/src/debug"
        Dir.exist?(dest_path) || FileUtils.mkdir_p(dest_path)
        FileUtils.cp("#{android_resources_path}/AndroidManifest.xml", dest_path)
        # TODO replace package_name in file before copying
      end
    end
  end
end
